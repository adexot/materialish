{"path":"components/input-chip","templateID":7,"sharedPropsHashes":{"parentComponent":"Z2h2Mic"},"localProps":{"component":{"name":"Input Chip","url":"input-chip","componentKey":"input-chip","description":"Input chips represent information, such as an entity or different attributes.","component":"src/components/component-doc","editorHeight":"480px","materialDocsLink":"https://material.io/design/components/chips.html#input-chips"},"markdown":"## Usage\n\n```jsx\nimport { InputChip } from 'materialish';\nimport 'materialish/materialish.css';\n```\n\n## Props\n\n| Prop Name | Default Value | Description                                                                                                                 |\n| --------- | ------------- | --------------------------------------------------------------------------------------------------------------------------- |\n| children  |               | The contents that are rendered within the chip                                                                              |\n| className |               | Additional class name(s) to add to the chip                                                                                 |\n| onClick   |               | Provide an `onClick` function to enable the \"ripple\" effect when a user clicks the chip                                     |\n| onClose   |               | Provide an `onClose` function to display an X button to the right side of the chip; it is called when the user clicks the X |\n| ripple    | true          | Whether or not to display the \"ripple\" effect for chips with an `onClick` prop                                              |\n| icon      |               | A [Materialish icon](/icons) element to render in the chip                                                                  |\n| nodeRef   |               | Pass a [ref](https://reactjs.org/docs/refs-and-the-dom.html) to get access to the root node                                 |\n| ...rest   |               | Other props are placed on the root element                                                                                  |\n\n## CSS Variables\n\n| Variable                             | Default Value           | Description                                                          |\n| ------------------------------------ | ----------------------- | -------------------------------------------------------------------- |\n| --mt-baseFontSize                    | 1rem                    | The text size and dimensions of the chip are based off of this value |\n| --mt-fontFamily                      | 'Roboto'                | The font family to use for the chip text                             |\n| --mt-chip-rippleColor                | --mt-mainColor, #2196f3 | The color of the ripple will be based off of this value              |\n| --mt-chip-backgroundColor            | #e0dfe0                 | The background color of the chip                                     |\n| --mt-chip-backgroundColorFocus       | rgba(51, 51, 51, 0.2)   | The background color of the chip when it is focused                  |\n| --mt-chip-backgroundColorActive      | #d9edff                 | The background color of the chip when is active                      |\n| --mt-chip-backgroundColorActiveFocus | rgba(33, 150, 243, 0.2) | The background color of the chip when it active and focused          |\n| --mt-chip-textColor                  | #212121                 | The text color for the chip                                          |\n| --mt-chip-textColorActive            | #005496                 | The text color for the active chip                                   |\n","example":"function onClose() {\n  console.log('The close button was clicked.');\n}\n\nfunction onClick() {\n  console.log('The chip was clicked.');\n}\n\nclass InputChipExample extends Component {\n  render() {\n    return (\n      <Fragment>\n        <InputChip icon={<IconBusiness />}>San Francisco</InputChip>\n        {' '}\n        <InputChip onClick={onClick}>Clickable</InputChip>\n        {' '}\n        <InputChip onClose={onClose}>Closeable</InputChip>\n      </Fragment>\n    );\n  }\n}\n\nreturn <InputChipExample />;\n"}}
