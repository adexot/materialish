.mt-checkbox {
  /*
    This (ugly) set of variables defines the variable fallback implementation.

    1. If `mt-checkbox-backgroundColor` is set, then that will be applied
    2. Otherwise, `mt-mainColor` will be applied
    3. Otherwise, #2196f3 will be applied
  */
  --_mt-checkbox-backgroundColor: var(
    --mt-checkbox-backgroundColor,
    var(--mt-mainColor, #2196f3)
  );
  --_mt-checkbox-tickColor: var(--mt-checkbox-tickColor, #fff);
  --_mt-checkbox-focusColor: var(--mt-checkbox-focusColor, #e8e8e8);
  position: relative;
  font-size: calc(var(--mt-baseFontSize, 1rem) * 1.125);
  cursor: pointer;
  display: inline-block;
  vertical-align: bottom;
  margin: 2px;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  z-index: 0;
}

.mt-checkbox_input {
  width: 100%;
  height: 100%;
  border: none;
  border-radius: 0;
  display: inline-block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  opacity: 0;
  display: block;
  cursor: pointer;
  z-index: 20;
}

.mt-checkbox_checkbox {
  width: 1em;
  height: 1em;
  border-radius: 0.11em;
  position: relative;
  overflow: hidden;
  box-shadow: inset 0 0 0 0.11em #6d6c6c;
  /*This is needed for iPhones to use border radius and overflow:hidden */
  -webkit-mask-image: -webkit-radial-gradient(white, black);
}

.mt-checkbox_checkbox:before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--_mt-checkbox-backgroundColor);
  border-radius: 100%;
  transform: scale(0);
  will-change: transform;
  transition: transform 0.15s ease-in;
  z-index: 3;
}

.mt-checkbox_checkbox:after {
  content: '';
  position: absolute;
  top: 0.2em;
  left: 0.35em;
  right: 0.35em;
  bottom: 0.2em;
  border: 0.11em solid var(--_mt-checkbox-tickColor);
  border-top: none;
  border-left: none;
  transform: translate3d(0, 0, 0) rotate(45deg) scale(0);
  will-change: transform;
  transition: transform 0.15s ease-in;
  z-index: 3;
}

.mt-checkbox_input:checked + .mt-checkbox_checkbox:before {
  transform: scale(2);
}

.mt-checkbox_input:checked + .mt-checkbox_checkbox:after {
  transform: translate3d(0, -0.07em, 0) rotate(45deg) scale(1);
}

.mt-checkbox_focus {
  position: absolute;
  top: -0.3em;
  left: -0.3em;
  right: -0.3em;
  bottom: -0.3em;
  z-index: -1;
  border-radius: 50%;
  pointer-events: none;
  overflow: hidden;
}

.mt-checkbox_focus:before {
  content: '';
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--_mt-checkbox-backgroundColor);
  opacity: 0;
  will-change: opacity;
  transition: opacity 0.15s ease-out;
}

.mt-checkbox_focus:after {
  content: '';
  display: block;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: var(--_mt-checkbox-focusColor);
  opacity: 0;
  will-change: opacity;
  transition: opacity 0.15s ease-out;
}

.mt-checkbox_input:focus + .mt-checkbox_checkbox + .mt-checkbox_focus:after {
  opacity: 1;
}

.mt-checkbox_input:focus:checked
  + .mt-checkbox_checkbox
  + .mt-checkbox_focus:after {
  opacity: 0;
}

.mt-checkbox_input:focus:checked
  + .mt-checkbox_checkbox
  + .mt-checkbox_focus:before {
  opacity: 0.3;
}

.mt-checkbox_input:disabled {
  cursor: not-allowed;
}

.mt-checkbox_input:disabled + .mt-checkbox_checkbox {
  box-shadow: inset 0 0 0 0.11em #ccc, 0 0 0 2px #ccc !important;
}

.mt-checkbox_input:disabled:checked {
  cursor: not-allowed;
}

.mt-checkbox_input:disabled:checked + .mt-checkbox_checkbox:before {
  background-color: var(--_mt-checkbox-focusColor);
}
